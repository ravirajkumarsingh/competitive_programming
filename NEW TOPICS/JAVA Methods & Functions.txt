Java String compareTo()
The Java String class compareTo() method compares the given string with the current string lexicographically. It returns a positive number, negative number, or 0.
It compares strings on the basis of the Unicode value of each character in the strings.
If the first string is lexicographically greater than the second string, it returns a positive number (difference of character value). If the first string is less than the second string lexicographically, it returns a negative number, and if the first string is lexicographically equal to the second string, it returns 0.
1. if s1 > s2, it returns positive number  
2. if s1 < s2, it returns negative number  
3. if s1 == s2, it returns 0  
Syntax
1. public int compareTo(String anotherString)    
The method accepts a parameter of type String that is to be compared with the current string.5M00Exception Handling in Java - Javatpoint
It returns an integer value. It throws the following two exceptions:
ClassCastException: If this object cannot get compared with the specified object.
NullPointerException: If the specified object is null.
Internal implementation
int compareTo(String anotherString) {  
    int length1 = value.length;  
    int length2 = anotherString.value.length;  
    int limit = Math.min(length1, length2);  
    char v1[] = value;  
    char v2[] = anotherString.value;  
   
    int i = 0;  
    while (i < limit) {  
        char ch1 = v1[i];  
        char ch2 = v2[i];  
        if (ch1 != ch2) {  
            return ch1 - ch2;  
        }  
        i++;  
    }  
    return length1 - length2;  
}  
Java String compareTo() Method Example
FileName: CompareToExample.java
public class CompareToExample{  
public static void main(String args[]){  
String s1="hello";  
String s2="hello";  
String s3="meklo";  
String s4="hemlo";  
String s5="flag";  
System.out.println(s1.compareTo(s2));//0 because both are equal  
System.out.println(s1.compareTo(s3));//-5 because "h" is 5 times lower than "m"  
System.out.println(s1.compareTo(s4));//-1 because "l" is 1 times lower than "m"  
System.out.println(s1.compareTo(s5));//2 because "h" is 2 times greater than "f"  
}}  
Output:
0
-5
-1
2


Collections:


A Collection represents a single unit of objects, i.e., a group.
The Collection in Java is a framework that provides an architecture to store and manipulate the group of objects.
Java Collections can achieve all the operations that you perform on a data such as searching, sorting, insertion, manipulation, and deletion.
Java Collection means a single unit of objects. Java Collection framework provides many interfaces (Set, List, Queue, Deque) and classes (ArrayList, Vector, LinkedList, PriorityQueue, HashSet, LinkedHashSet, TreeSet).